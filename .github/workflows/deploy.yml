name: Conditional Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build and push Frontend Docker image
      if: contains(github.event.push.commits[*].added.*,'frontend/') || contains(github.event.push.commits[*].modified.*,'frontend/')
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/frontend:latest
      
    - name: Build and push Backend Docker image
      if: contains(github.event.push.commits[*].added.*,'backend/') || contains(github.event.push.commits[*].modified.*,'backend/')
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ -n "$(docker images -q ghcr.io/${{ github.repository }}/frontend:latest)" ]; then
              docker pull ghcr.io/${{ github.repository }}/frontend:latest
              docker stop frontend-container || true
              docker rm frontend-container || true
              docker run --name frontend-container -d -p 3000:3000 ghcr.io/${{ github.repository }}/frontend:latest
            fi

            if [ -n "$(docker images -q ghcr.io/${{ github.repository }}/backend:latest)" ]; then
              docker pull ghcr.io/${{ github.repository }}/backend:latest
              docker stop backend-container || true
              docker rm backend-container || true
              docker run --name backend-container -d -p 4000:4000 ghcr.io/${{ github.repository }}/backend:latest
            fi
